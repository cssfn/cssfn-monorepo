publish @cssfn/css-prop-auto-prefix
publish @cssfn/css-selectors
publish @cssfn/cssfn
publish @cssfn/css-config



high cpu usage:

    const result: Refs<CssConfigProps> = {};
    for (const propName in cssProps) { // high cpu usage
        // excludes the entries if the `propName` is not ending with the specified `suffix`:
        if (!propName.endsWith(suffix)) continue; // exclude


            getOwnPropertyDescriptor : (_unusedObj, propName: string|symbol)                                          => this.#getPropDescRef(propName),


// simplifies:
    const result = (
        flat(rules)
        .filter(isNotFalsyRuleOrFactory)
        .map(convertRuleOrFactoryToOptionalRule)
        .filter(isNotFalsyRule)
    );